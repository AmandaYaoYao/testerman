# __METADATA__BEGIN__
# <?xml version="1.0" encoding="utf-8" ?>
# <metadata version="1.0">
# <description>description</description>
# <prerequisites>prerequisites</prerequisites>
# <parameters>
# <parameter name="PX_PROBE_01" default="probe:tcp01@localhost" type="string"><![CDATA[]]></parameter>
# <parameter name="PX_SERVER_IP" default="127.0.0.1" type="string"><![CDATA[]]></parameter>
# <parameter name="PX_SERVER_PORT" default="2905" type="string"><![CDATA[]]></parameter>
# <parameter name="PX_PROBE_02" default="probe:tcp02@localhost" type="string"><![CDATA[]]></parameter>
# </parameters>
# </metadata>
# __METADATA__END__
##
# Sample script for Testerman
#
# This ATS demonstrates the file.manager probe.
#
##

# Resource generated
# From file: .../qtesterman.py (817 bytes)
# Creation mode: bin
MyResource = \
'\x23\x20\x2d\x2a\x2d\x20\x63\x6f\x64\x69\x6e\x67\x3a\x20\x75\x74\x66\x2d\x38' \
'\x20\x2d\x2a\x2d\x0a\x23\x23\x0a\x23\x20\x54\x68\x69\x73\x20\x66\x69\x6c\x65' \
'\x20\x69\x73\x20\x70\x61\x72\x74\x20\x6f\x66\x20\x54\x65\x73\x74\x65\x72\x6d' \
'\x61\x6e\x2c\x20\x61\x20\x74\x65\x73\x74\x20\x61\x75\x74\x6f\x6d\x61\x74\x69' \
'\x6f\x6e\x20\x73\x79\x73\x74\x65\x6d\x2e\x0a\x23\x20\x43\x6f\x70\x79\x72\x69' \
'\x67\x68\x74\x20\x28\x63\x29\x20\x32\x30\x30\x39\x20\x51\x54\x65\x73\x74\x65' \
'\x72\x6d\x61\x6e\x20\x63\x6f\x6e\x74\x72\x69\x62\x75\x74\x6f\x72\x73\x0a\x23' \
'\x0a\x23\x20\x54\x68\x69\x73\x20\x70\x72\x6f\x67\x72\x61\x6d\x20\x69\x73\x20' \
'\x66\x72\x65\x65\x20\x73\x6f\x66\x74\x77\x61\x72\x65\x3b\x20\x79\x6f\x75\x20' \
'\x63\x61\x6e\x20\x72\x65\x64\x69\x73\x74\x72\x69\x62\x75\x74\x65\x20\x69\x74' \
'\x20\x61\x6e\x64\x2f\x6f\x72\x20\x6d\x6f\x64\x69\x66\x79\x20\x69\x74\x20\x75' \
'\x6e\x64\x65\x72\x0a\x23\x20\x74\x68\x65\x20\x74\x65\x72\x6d\x73\x20\x6f\x66' \
'\x20\x74\x68\x65\x20\x47\x4e\x55\x20\x47\x65\x6e\x65\x72\x61\x6c\x20\x50\x75' \
'\x62\x6c\x69\x63\x20\x4c\x69\x63\x65\x6e\x73\x65\x20\x61\x73\x20\x70\x75\x62' \
'\x6c\x69\x73\x68\x65\x64\x20\x62\x79\x20\x74\x68\x65\x20\x46\x72\x65\x65\x20' \
'\x53\x6f\x66\x74\x77\x61\x72\x65\x0a\x23\x20\x46\x6f\x75\x6e\x64\x61\x74\x69' \
'\x6f\x6e\x3b\x20\x65\x69\x74\x68\x65\x72\x20\x76\x65\x72\x73\x69\x6f\x6e\x20' \
'\x32\x20\x6f\x66\x20\x74\x68\x65\x20\x4c\x69\x63\x65\x6e\x73\x65\x2c\x20\x6f' \
'\x72\x20\x28\x61\x74\x20\x79\x6f\x75\x72\x20\x6f\x70\x74\x69\x6f\x6e\x29\x20' \
'\x61\x6e\x79\x20\x6c\x61\x74\x65\x72\x0a\x23\x20\x76\x65\x72\x73\x69\x6f\x6e' \
'\x2e\x0a\x23\x20\x54\x68\x69\x73\x20\x70\x72\x6f\x67\x72\x61\x6d\x20\x69\x73' \
'\x20\x64\x69\x73\x74\x72\x69\x62\x75\x74\x65\x64\x20\x69\x6e\x20\x74\x68\x65' \
'\x20\x68\x6f\x70\x65\x20\x74\x68\x61\x74\x20\x69\x74\x20\x77\x69\x6c\x6c\x20' \
'\x62\x65\x20\x75\x73\x65\x66\x75\x6c\x2c\x20\x62\x75\x74\x20\x57\x49\x54\x48' \
'\x4f\x55\x54\x0a\x23\x20\x41\x4e\x59\x20\x57\x41\x52\x52\x41\x4e\x54\x59\x3b' \
'\x20\x77\x69\x74\x68\x6f\x75\x74\x20\x65\x76\x65\x6e\x20\x74\x68\x65\x20\x69' \
'\x6d\x70\x6c\x69\x65\x64\x20\x77\x61\x72\x72\x61\x6e\x74\x79\x20\x6f\x66\x20' \
'\x4d\x45\x52\x43\x48\x41\x4e\x54\x41\x42\x49\x4c\x49\x54\x59\x20\x6f\x72\x20' \
'\x46\x49\x54\x4e\x45\x53\x53\x0a\x23\x20\x46\x4f\x52\x20\x41\x20\x50\x41\x52' \
'\x54\x49\x43\x55\x4c\x41\x52\x20\x50\x55\x52\x50\x4f\x53\x45\x2e\x20\x20\x53' \
'\x65\x65\x20\x74\x68\x65\x20\x47\x4e\x55\x20\x47\x65\x6e\x65\x72\x61\x6c\x20' \
'\x50\x75\x62\x6c\x69\x63\x20\x4c\x69\x63\x65\x6e\x73\x65\x20\x66\x6f\x72\x20' \
'\x6d\x6f\x72\x65\x0a\x23\x20\x64\x65\x74\x61\x69\x6c\x73\x2e\x0a\x23\x23\x0a' \
'\x0a\x23\x23\x0a\x23\x20\x4d\x61\x69\x6e\x20\x51\x54\x65\x73\x74\x65\x72\x6d' \
'\x61\x6e\x20\x6c\x61\x75\x6e\x63\x68\x65\x72\x2e\x0a\x23\x20\x54\x68\x69\x73' \
'\x20\x69\x73\x20\x74\x68\x65\x20\x73\x63\x72\x69\x70\x74\x20\x74\x6f\x20\x72' \
'\x75\x6e\x20\x77\x68\x65\x6e\x20\x79\x6f\x75\x20\x77\x61\x6e\x74\x20\x74\x6f' \
'\x20\x73\x74\x61\x72\x74\x20\x51\x54\x65\x73\x74\x65\x72\x6d\x61\x6e\x2e\x0a' \
'\x23\x20\x0a\x23\x20\x41\x6c\x73\x6f\x20\x61\x63\x74\x73\x20\x61\x73\x20\x61' \
'\x20\x70\x6c\x61\x63\x65\x68\x6f\x6c\x64\x65\x72\x20\x66\x6f\x72\x20\x70\x6f' \
'\x73\x73\x69\x62\x6c\x65\x20\x70\x72\x65\x2d\x72\x75\x6e\x20\x65\x76\x6f\x6c' \
'\x75\x74\x69\x6f\x6e\x73\x2e\x0a\x23\x0a\x23\x23\x0a\x0a\x69\x6d\x70\x6f\x72' \
'\x74\x20\x4d\x61\x69\x6e\x0a\x0a\x4d\x61\x69\x6e\x2e\x72\x75\x6e\x28\x29\x0a'


class TC_CREATE_RESOURCE(TestCase):
	"""
	Creates a basic file from a resource,
	makes it executable.
	"""
	def body(self, name = "/tmp/mytest"):
		
		def m_createFile(name, content):
			return ('createFile', dict(content = content, name = name))

		def m_chmod(path, mode):
			return ('chmod', dict(mode = mode, path = path))

		def m_remove(path):
			return ('remove', dict(path = path))

		p01 = self.mtc['fileManager']
		port_map(p01, self.system['target'])

		# Let's create our file
		p01.send(m_createFile(name, MyResource))
		p01.send(m_chmod(name, 0755))
		# Remove it
		# p01.send(m_remove(name))

		self.setverdict("pass")
		
conf = TestAdapterConfiguration('default')
conf.bind('target', 'probe:filemanager', 'file.manager')

##
# Control definition
##

enable_debug_logs()

useTestAdapterConfiguration('default')
TC_CREATE_RESOURCE().execute()
