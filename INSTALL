Minimal Requirements
====================

1. Server-side:
- Linux (some non-portable code will prevent the server from running
  on other systems for now: Tools.kill*()) (untested under other OSes for now)
- Python 2.6+
- libxml2-python (debian:python-libxml2 and dependencies)

2. Client-side (QTesterman):
- Python 2.5+ (Python 2.7+ is preferred)
- Qt 4.4.1+ with PyQt bindings (debian:python-qt4 and dependencies)
- QScintilla2 for python (debian:python-qscintilla2 and dependencies)


Additional, Optional Requirements
=================================

1. For development
- pyrcc4 (included in debian:pyqt4-dev-tools)
- sphinx (debian:python-sphinx)

2. For probes
- depends on the probe. Please see the probes documentations.

3. For QTesterman default plugins
- xslt: xslt1 and xml2 for python (debian:{python-libxslt1 ,python-libxml2} and dependencies,
  all included in libxml2 package for Windows))


Testerman First Run for the Impatient
=====================================

1. Configure a document root (docroot):
   Edit conf/testerman.conf and set document_root to a directory that will contain
   Testerman user scripts. It does not need to exist, but must be rw for the user
   you'll use to start the server.
   
   The default is ~/testerman.

2. Set up the document root:
   bin/testerman-admin setup document-root

3. Start the Testerman server components:
   bin/testerman-admin start all

4. Check if everything is running:
   bin/testerman-admin status

5. Start an agent (not mandatory, but required for
   samples execution):
    from the source root: bin/testerman-agent --name localhost

6. Start the QTesterman client:
    from the source root: bin/qtesterman

7. Enter http://localhost:8080 as the server URL,
   use anything you wish as username (for instance 'guest')

8. Browse the "remote repository" to access the samples/
   and open "testerman.ats".
   Run it. All tests should be OK.
   Play with other samples on will.
   Give feedbacks.


Summary/sample (using the default docroot in ~/testerman):

bin/testerman-admin setup document-root
bin/testerman-admin start all
bin/testerman-agent --name localhost # use -d to daemonize if you prefer
bin/qtesterman


Building the documentation
==========================

Testerman documentation is located in docs/.
To build it, you need to install sphinx (1.1.3+), which
is a python-based documentation generator.

Once installed, go to docs/ and run: make html

This generates html-based documentation that can be browesed from
docs/_build/html/index.html.

Other documentation options are available (single HTML page, PDF, ...)




